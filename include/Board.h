#pragma once

#include <algorithm>
#include <vector>
#include <iostream>

#include "QuarterBoard.h"

class Board
{
private:
    /// @brief The quarter boards of the board
    /// @note The quarter boards are stored in a 2D array, where the first index is the row (top or bottom) and the second index is the column (left or right)
    QuarterBoard quarterBoards[2][2];
    /// @brief Index for tile selection
    int tile_index = 0;
    /// @brief Index of the quarter contains rainbow corner
    /// @note 0: top/left, 1: top/right, 2: bottom/left, 3: bottom/right
    int rainbow_corner_quarter = -1;

private:
    /**
     * @brief Generate the Quarter Board object
     *
     * @param top (IN) True if the quarter board is on the top
     * @param left (IN) True if the quarter board is on the left
     * @return QuarterBoard
     */
    QuarterBoard generateQuarterBoard(bool top, bool left);

public:
    Board();
    /**
     * @brief Get the Frame by coordinates
     *
     * @param x (IN) The x coordinate of the frame
     * @param y (IN) The y coordinate of the frame
     * @return Frame
     */
    Frame getFrame(int x, int y);
    /**
     * @brief Generate the board
     * @note The board is generated by generating the quarter boards and then combining them
     */
    void generate();

    static std::vector<Tile> TILES;
};