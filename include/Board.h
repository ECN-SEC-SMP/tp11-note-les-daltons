#pragma once

#include <algorithm>
#include <vector>
#include <iostream>

#include "QuarterBoard.h"

class Board
{
private:
    /// @brief The quarter boards of the board
    /// @note The quarter boards are stored in a 2D array, where the first index is the row (top or bottom) and the second index is the column (left or right)
    QuarterBoard quarterBoards[2][2];

private:
    /**
     * @brief Generate the Quarter Board object
     * 
     * @param top (IN) True if the quarter board is on the top
     * @param left (IN) True if the quarter board is on the left
     * @return QuarterBoard 
     */
    QuarterBoard generateQuarterBoard(bool top, bool left);

public:
    Board();
    /**
     * @brief Generate the board
     * @note The board is generated by generating the quarter boards and then combining them
     */
    void generate();
    /**
     * @brief Get the Frame by coordinates
     * 
     * @param x (IN) The x coordinate of the frame
     * @param y (IN) The y coordinate of the frame
     * @return Frame 
     */
    Frame getFrame(int x, int y);
};

std::vector<Tile> TILES = {
    Tile(RED, CIRCLE),
    Tile(RED, SQUARE),
    Tile(RED, TRIANGLE),
    Tile(RED, STAR),
    Tile(GREEN, CIRCLE),
    Tile(GREEN, SQUARE),
    Tile(GREEN, TRIANGLE),
    Tile(GREEN, STAR),
    Tile(BLUE, CIRCLE),
    Tile(BLUE, SQUARE),
    Tile(BLUE, TRIANGLE),
    Tile(BLUE, STAR),
    Tile(YELLOW, CIRCLE),
    Tile(YELLOW, SQUARE),
    Tile(YELLOW, TRIANGLE),
    Tile(YELLOW, STAR),
    Tile(RAINBOW, STAR)
};